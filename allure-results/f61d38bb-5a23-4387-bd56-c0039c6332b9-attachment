# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Login Tests >> Login successfully with valid credentials
- Location: C:\Users\dprakash\playwright\tests\loginToApplication.spec.js:21:5

# Error details

```
Error: page.goto: Protocol error (Page.navigate): Cannot navigate to invalid URL
Call log:
  - navigating to ""https://freelance-learn-automation.vercel.app/login"", waiting until "load"

    at BaseTest.beforeEach (C:\Users\dprakash\playwright\Utils\BaseTest.js:22:16)
    at C:\Users\dprakash\playwright\tests\loginToApplication.spec.js:18:24
```

# Test source

```ts
   1 |
   2 | const { test } = require('@playwright/test');
   3 | const fs = require('fs');
   4 | const path = require('path')
   5 |
   6 |
   7 | class BaseTest {
   8 |   
   9 |   // Before each test - navigate to app URL
  10 |   async beforeEach({ page }) {
  11 |     console.log('Running setup before each test');
  12 |
  13 |     // Load the properties from the file
  14 |     const properties = this.loadProperties("config.properties")
  15 |
  16 |     const appUrl = properties['APP_URL'];
  17 |
  18 |     if (!appUrl) {
  19 |         throw new Error('APP_URL not found in the properties file');
  20 |     }
  21 |
> 22 |     await page.goto(appUrl);
     |                ^ Error: page.goto: Protocol error (Page.navigate): Cannot navigate to invalid URL
  23 | }
  24 |
  25 | // After each test - close the browser
  26 | async afterEach({ browser }) {
  27 |     console.log('Closing the browser after each test');
  28 |     await browser.close();  // Close the browser instance after the test
  29 | }
  30 |
  31 | // Function to load properties from a .properties file
  32 | loadProperties(filePath) {
  33 |     const properties = {};
  34 |
  35 |   
  36 |     // Use path.resolve() to create the absolute file path
  37 |     const resolvedFilePath = path.resolve(__dirname, '..', filePath);
  38 |
  39 |     // Read the content of the properties file
  40 |     const fileContent = fs.readFileSync(resolvedFilePath, 'utf8');
  41 |
  42 |     
  43 |     // Split the file into lines
  44 |     const lines = fileContent.split('\n');
  45 |
  46 |     lines.forEach(line => {
  47 |         // Ignore empty lines and comments
  48 |         if (line.trim() === '' || line.startsWith('#')) return;
  49 |
  50 |         // Split each line into key and value
  51 |         const [key, value] = line.split('=');
  52 |
  53 |         // If key and value exist, trim and add to properties object
  54 |         if (key && value) {
  55 |             properties[key.trim()] = value.trim();
  56 |         }
  57 |     });
  58 |
  59 |     return properties;
  60 | }
  61 | }
  62 |
  63 | module.exports = BaseTest;
  64 |
```